(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{10:function(t,s,e){t.exports=!e(13)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},107:function(t,s){t.exports={title:"ZenAudit",description:"Make your projects audits a breeze",dest:"docs_build",base:"/zen-audit/",themeConfig:{logo:"/logotype.png",title:!1,nav:[{text:"Home",link:"/"},{text:"Custom Rules and Stacks",link:"/custom/"},{text:"Included Stacks and Rules",link:"/included/"},{text:"API",link:"/API/"},{text:"GitHub",link:"https://github.com/DX-DeveloperExperience/project-starter"}],sidebar:"auto"}}},11:function(t,s){var e=t.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=e)},12:function(t,s){t.exports=function(t){return"object"==typeof t?null!==t:"function"==typeof t}},13:function(t,s){t.exports=function(t){try{return!!t()}catch(t){return!0}}},15:function(t,s,e){var n=e(12);t.exports=function(t){if(!n(t))throw TypeError(t+" is not an object!");return t}},16:function(t,s,e){var n=e(15),a=e(29),r=e(30),o=Object.defineProperty;s.f=e(10)?Object.defineProperty:function(t,s,e){if(n(t),s=r(s,!0),n(e),a)try{return o(t,s,e)}catch(t){}if("get"in e||"set"in e)throw TypeError("Accessors not supported!");return"value"in e&&(t[s]=e.value),t}},202:function(t){t.exports=JSON.parse('{"name":"zen-audit","description":"A tool to gather everything you need to deploy a new project","version":"0.9.0","author":"Zenika - Demey Emmanuel - Lafrance Antoine","bin":{"project-starter-cli":"./bin/run"},"bugs":"https://github.com/DX-DeveloperExperience/project-starter/issues","dependencies":{"@oclif/command":"1.5.11","@oclif/config":"1.12.9","@oclif/dev-cli":"1.22.0","@oclif/plugin-help":"2.1.6","@oclif/tslint":"3.1.1","@types/mustache":"0.8.32","axios":"0.19.0","check-node-version":"3.3.0","fs-extra":"8.0.1","inquirer":"6.2.2","mdpdf":"2.0.4","mustache":"3.0.1","request":"2.88.0","rxjs":"6.5.2","sync-request":"6.1.0","tslib":"1.9.3","typescript":"3.3.3333","winston":"3.2.1"},"devDependencies":{"@types/axios":"0.14.0","@types/fs-extra":"7.0.0","@types/inquirer":"6.0.3","@types/jest":"24.0.9","@types/mock-fs":"3.6.30","@types/node":"10.12.29","@types/rx":"4.1.1","@types/winston":"2.4.4","copyfiles":"2.1.1","coveralls":"3.0.3","globby":"8.0.2","husky":"1.3.1","jest":"24.1.0","mock-fs":"4.8.0","node-sass":"4.12.0","npm-run-all":"4.1.5","prettier":"1.17.1","proxyquire":"2.1.0","sass-loader":"7.3.1","ts-jest":"24.0.0","ts-node":"8.0.2","tslint":"5.13.1","tslint-microsoft-contrib":"6.2.0","typedoc":"0.15.0","typedoc-plugin-markdown":"2.1.3","vuepress":"1.0.2"},"engines":{"node":">=8.0.0"},"files":["/bin","/lib","/npm-shrinkwrap.json","/oclif.manifest.json"],"homepage":"https://github.com/DX-DeveloperExperience/project-starter","keywords":["oclif"],"license":"MIT","main":"lib/index.js","oclif":{"commands":"./lib/commands","bin":"project-starter-cli"},"repository":"DX-DeveloperExperience/project-starter","scripts":{"postpack":"rm -f oclif.manifest.json","posttest":"tslint -p . -t stylish","prepack":"rm -rf lib && tsc -b && oclif-dev manifest && oclif-dev readme && npm run copy-static-files","copy-static-files":"find src -not -name \'*.ts\' -type f -exec copyfiles -u 1 {} lib/ \\\\;","test":"jest --runInBand","test:cov":"jest --coverage --runInBand","jest-cache":"jest --clearCache --detectOpenHandles ","audit":"npm audit","oclif-pack":"oclif-dev pack","prettier-test":"prettier -c \\"src/**/*.ts\\" \\"test/**/*.ts\\"","lint":"tslint -p tsconfig.json -c tslint.json","ci":"npm-run-all audit jest-cache prettier-test test","version":"oclif-dev readme && git add README.md","publish-npm":"npm publish --access public","docs:dev":"vuepress dev docs","docs:build":"vuepress build docs","typedoc":"typedoc src --mode modules --json docs/API/api.json --options typedoc.js"},"jest":{"roots":["<rootDir>/src"],"transform":{"^.+\\\\.tsx?$":"ts-jest"},"testRegex":"(/tests/.*|(\\\\.|/)(test|spec))\\\\.tsx?$","moduleFileExtensions":["ts","tsx","js","jsx","json","node"],"modulePathIgnorePatterns":["<rootDir>/.*/__mocks__"]},"prettier":{"singleQuote":true,"trailingComma":"all","quoteProps":"preserve"},"husky":{"hooks":{"pre-push":"npm run ci"}}}')},211:function(t,s,e){"use strict";e.r(s);e(44);var n={computed:{packageName:function(){return e(202).name},projectName:function(){return e(107).title}}},a=e(0),r=Object(a.a)(n,function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"creating-custom-stacks-and-rules"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#creating-custom-stacks-and-rules","aria-hidden":"true"}},[t._v("#")]),t._v(" Creating custom Stacks and Rules")]),t._v(" "),e("h2",{attrs:{id:"introduction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#introduction","aria-hidden":"true"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),e("p",[t._v("ZenAudit is written with "),e("strong",[t._v("TypeScript")]),t._v(", as a result, if you want to add custom Stacks and Rules, you will have to write them using "),e("strong",[t._v("TypeScript")]),t._v(". You may write them in JavaScript but no documentation is provided for it. You will need to install "+t._s(t.projectName)+" as a "),e("strong",[t._v("devDependency")]),t._v(", so you should "),e("a",{attrs:{href:"https://docs.npmjs.com/creating-node-js-modules",target:"_blank",rel:"noopener noreferrer"}},[t._v("generate a Node project"),e("OutboundLink")],1),t._v(" first.")]),t._v(" "),e("h2",{attrs:{id:"first-steps"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#first-steps","aria-hidden":"true"}},[t._v("#")]),t._v(" First steps")]),t._v(" "),e("h3",{attrs:{id:"install-zenaudit-as-a-devdependency"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install-zenaudit-as-a-devdependency","aria-hidden":"true"}},[t._v("#")]),t._v(" Install ZenAudit as a devDependency")]),t._v(" "),e("p",[t._v("In order to add your custom rules, first you have to install "+t._s(t.projectName)+" as a devDependency with :")]),t._v(" "),e("p",[e("code",[t._v("npm i -DE "+t._s(t.packageName))])]),t._v(" "),e("h3",{attrs:{id:"prepare-your-directory-structure"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#prepare-your-directory-structure","aria-hidden":"true"}},[t._v("#")]),t._v(" Prepare your directory structure")]),t._v(" "),e("p",[t._v("For your Stacks and Rules to be read by "+t._s(t.projectName)+", you need to create a folder with the name of your choice, containing two folders; "),e("strong",[t._v("rules")]),t._v(" and "),e("strong",[t._v("stacks")]),t._v(". In these folder, you will need to create a folder for "),e("strong",[t._v("every stack and rule")]),t._v(". It's inside these folders that you will write your TypeScript files, that must be named "),e("strong",[t._v("index.ts")]),t._v(".")]),t._v(" "),e("p",[t._v("Your directory structure should look like this :")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("custom-folder\n    ├─ rules\n    │    ├─ my-custom-rule1\n    │    |   └─ index.ts\n    |    └─ my-custom-rule2\n    |        └─ index.ts\n    └─ stacks\n        ├─ my-custom-stack1\n        |   └─ index.ts\n        └─ mu-custom-stack2\n            └─ index.ts\n")])])]),e("h2",{attrs:{id:"custom-rules"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#custom-rules","aria-hidden":"true"}},[t._v("#")]),t._v(" Custom Rules")]),t._v(" "),e("h3",{attrs:{id:"writing-custom-rules"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#writing-custom-rules","aria-hidden":"true"}},[t._v("#")]),t._v(" Writing custom Rules")]),t._v(" "),e("p",[t._v("Before you start writing your first rule, let's take a look at the Rule interface as you will need to implement its methods :")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rule")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * Resolves a promise to true if the audited project should apply this rule. For example,\n   * if the rule is to add rules to the .gitignore file, if the existing .gitignore does not contains\n   * all the rules, this method resolves to true.\n   */")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldBeApplied")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * Add what is necessary to the project so the rule should not be applied again.\n   * Takes a boolean or an array of string to tell if the rule has to be applied,\n   * or the choices to apply if the user has multiple choices to apply.\n   */")]),t._v("\n  apply"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("answers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * Returns the name of the Rule as it will be seen in the prompt.\n   */")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * Returns the description of the stack that will be seen before asking if the user wants to apply it.\n   */")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getShortDescription")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * Returns a longer description that will appear in the generated Markdown/PDF report.\n   */")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLongDescription")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n   * Gives the prompt type as a string. Please refer to Inquirer documentation to know which\n   * prompt types exists. For Yes|No or confirmation, use "list" as prompt type,\n   * and use the "YesNo" or "Ok" types in getChoices() method.\n   */')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPromptType")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * Returns a list of Choices for the user to chose. For Yes|No question, use native YesNo type,\n   * for just a confirmation, use Ok type.\n   */")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getChoices")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Choice"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Choice"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("Create a TypeScript file inside your "),e("strong",[t._v("custom rule folder")]),t._v(" named "),e("strong",[t._v("index.ts")]),t._v(", and write your class definition like this:")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[t._v("@RuleRegister"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("register\n@StackRegister"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerRuleForStacks")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Stack1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Stack2"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Replace Stack1, Stack2... with Stack classes")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* or @StackRegister.registerRuleForAll({excludes: [Stacks to exclude]}) to register\nfor all stacks except the ones you provide in the array */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rule2")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldBeApplied")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Method not implemented.'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * This method is optional\n   */")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("answers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Method not implemented.'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Method not implemented.'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getShortDescription")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Method not implemented.'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLongDescription")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Method not implemented.'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPromptType")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Method not implemented.'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getChoices")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Choice"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Choice"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Method not implemented.'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"warning custom-block"},[e("p",[t._v("Decorators are an experimental feature for the moment, so you need to set "),e("strong",[t._v("experimentalDecorators")]),t._v(" option to true in your tsconfig.json")])]),t._v(" "),e("h3",{attrs:{id:"sub-rules"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sub-rules","aria-hidden":"true"}},[t._v("#")]),t._v(" Sub-rules")]),t._v(" "),e("p",[t._v("If you want your Rule2 to be prompted only after Rule1 is applied, use the following decorator:")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[t._v("@RuleRegister"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerSubRuleOf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Rule1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rule2")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"custom-stacks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#custom-stacks","aria-hidden":"true"}},[t._v("#")]),t._v(" Custom Stacks")]),t._v(" "),e("h3",{attrs:{id:"writing-custom-stacks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#writing-custom-stacks","aria-hidden":"true"}},[t._v("#")]),t._v(" Writing custom Stacks")]),t._v(" "),e("p",[t._v("Let's take a look at the Stack interface first :")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stack")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * Resolves a Promise to true if the project contains what is necessary to detect the stack.\n   */")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAvailable")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * Gives some additional data about the detected stack. Optional method.\n   */")]),t._v("\n  getInformations"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * Returns the name as it will be seen in the prompt.\n   */")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("When you're finished writing your custom Stacks and Rules, run our application using the custom flag "),e("strong",[t._v("-c")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("bin/run -c"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("path/to/custom-rules-and-stacks path/to/your/project\n")])])])])},[],!1,null,null,null);s.default=r.exports},24:function(t,s,e){var n=e(12),a=e(11).document,r=n(a)&&n(a.createElement);t.exports=function(t){return r?a.createElement(t):{}}},29:function(t,s,e){t.exports=!e(10)&&!e(13)(function(){return 7!=Object.defineProperty(e(24)("div"),"a",{get:function(){return 7}}).a})},30:function(t,s,e){var n=e(12);t.exports=function(t,s){if(!n(t))return t;var e,a;if(s&&"function"==typeof(e=t.toString)&&!n(a=e.call(t)))return a;if("function"==typeof(e=t.valueOf)&&!n(a=e.call(t)))return a;if(!s&&"function"==typeof(e=t.toString)&&!n(a=e.call(t)))return a;throw TypeError("Can't convert object to primitive value")}},44:function(t,s,e){var n=e(16).f,a=Function.prototype,r=/^\s*function ([^ (]*)/;"name"in a||e(10)&&n(a,"name",{configurable:!0,get:function(){try{return(""+this).match(r)[1]}catch(t){return""}}})}}]);